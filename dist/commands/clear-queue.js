exports.run = (client, message, args, level) => {
    if (client.musicUserCheck(client, message, true)) {
        return;
    }
    if (client.player.getQueue(message).tracks.length <= 1)
        return message.channel.send(`There is only one song in the queue.`);
    client.player.clearQueue(message);
    message.channel.bulkDelete(1).then(() => {
        message.channel
            .send(`The queue has just been **removed** !`)
            .then((msg) => msg.delete({ timeout: 3000 }));
    });
};
exports.conf = {
    enabled: true,
    guildOnly: true,
    aliases: ['cq', 'clr-que'],
    permLevel: 'Moderator',
};
exports.help = {
    name: 'clear-queue',
    category: 'Music',
    description: 'Clears queue',
    usage: 'clear-queue',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItcXVldWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWFuZHMvY2xlYXItcXVldWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQzNDLElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFO1FBQzlDLE9BQU87S0FDVjtJQUNELElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDO1FBQ2xELE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsc0NBQXNDLENBQUMsQ0FBQztJQUN4RSxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ3BDLE9BQU8sQ0FBQyxPQUFPO2FBQ1YsSUFBSSxDQUFDLHVDQUF1QyxDQUFDO2FBQzdDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHO0lBQ1gsT0FBTyxFQUFFLElBQUk7SUFDYixTQUFTLEVBQUUsSUFBSTtJQUNmLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUM7SUFDMUIsU0FBUyxFQUFFLFdBQVc7Q0FDekIsQ0FBQztBQUVGLE9BQU8sQ0FBQyxJQUFJLEdBQUc7SUFDWCxJQUFJLEVBQUUsYUFBYTtJQUNuQixRQUFRLEVBQUUsT0FBTztJQUNqQixXQUFXLEVBQUUsY0FBYztJQUMzQixLQUFLLEVBQUUsYUFBYTtDQUN2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5ydW4gPSAoY2xpZW50LCBtZXNzYWdlLCBhcmdzLCBsZXZlbCkgPT4ge1xuICAgIGlmIChjbGllbnQubXVzaWNVc2VyQ2hlY2soY2xpZW50LCBtZXNzYWdlLCB0cnVlKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjbGllbnQucGxheWVyLmdldFF1ZXVlKG1lc3NhZ2UpLnRyYWNrcy5sZW5ndGggPD0gMSlcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2UuY2hhbm5lbC5zZW5kKGBUaGVyZSBpcyBvbmx5IG9uZSBzb25nIGluIHRoZSBxdWV1ZS5gKTtcbiAgICBjbGllbnQucGxheWVyLmNsZWFyUXVldWUobWVzc2FnZSk7XG4gICAgbWVzc2FnZS5jaGFubmVsLmJ1bGtEZWxldGUoMSkudGhlbigoKSA9PiB7XG4gICAgICAgIG1lc3NhZ2UuY2hhbm5lbFxuICAgICAgICAgICAgLnNlbmQoYFRoZSBxdWV1ZSBoYXMganVzdCBiZWVuICoqcmVtb3ZlZCoqICFgKVxuICAgICAgICAgICAgLnRoZW4oKG1zZykgPT4gbXNnLmRlbGV0ZSh7IHRpbWVvdXQ6IDMwMDAgfSkpO1xuICAgIH0pO1xufTtcblxuZXhwb3J0cy5jb25mID0ge1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgZ3VpbGRPbmx5OiB0cnVlLFxuICAgIGFsaWFzZXM6IFsnY3EnLCAnY2xyLXF1ZSddLFxuICAgIHBlcm1MZXZlbDogJ01vZGVyYXRvcicsXG59O1xuXG5leHBvcnRzLmhlbHAgPSB7XG4gICAgbmFtZTogJ2NsZWFyLXF1ZXVlJyxcbiAgICBjYXRlZ29yeTogJ011c2ljJyxcbiAgICBkZXNjcmlwdGlvbjogJ0NsZWFycyBxdWV1ZScsXG4gICAgdXNhZ2U6ICdjbGVhci1xdWV1ZScsXG59O1xuIl19