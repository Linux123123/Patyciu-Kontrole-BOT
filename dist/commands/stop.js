exports.run = async (client, message, args, level) => {
    if (client.musicUserCheck(client, message, true))
        return;
    client.player.setRepeatMode(message, false);
    client.player.stop(message);
    client.player.getQueue(message).collector.stop();
    client.clearBanner(client, message);
    message.channel.bulkDelete(1).then(() => {
        message.channel
            .send(`Music **stopped** !`)
            .then((msg) => msg.delete({ timeout: 3000 }));
    });
};
exports.conf = {
    enabled: true,
    guildOnly: true,
    aliases: ['s'],
    permLevel: 'Moderator',
};
exports.help = {
    name: 'stop',
    category: 'Music',
    description: 'Stops music',
    usage: 'stop',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9zdG9wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxHQUFHLEdBQUcsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQ2pELElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQztRQUFFLE9BQU87SUFDekQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVCLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqRCxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNwQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ3BDLE9BQU8sQ0FBQyxPQUFPO2FBQ1YsSUFBSSxDQUFDLHFCQUFxQixDQUFDO2FBQzNCLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHO0lBQ1gsT0FBTyxFQUFFLElBQUk7SUFDYixTQUFTLEVBQUUsSUFBSTtJQUNmLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQztJQUNkLFNBQVMsRUFBRSxXQUFXO0NBQ3pCLENBQUM7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHO0lBQ1gsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsT0FBTztJQUNqQixXQUFXLEVBQUUsYUFBYTtJQUMxQixLQUFLLEVBQUUsTUFBTTtDQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5ydW4gPSBhc3luYyAoY2xpZW50LCBtZXNzYWdlLCBhcmdzLCBsZXZlbCkgPT4ge1xuICAgIGlmIChjbGllbnQubXVzaWNVc2VyQ2hlY2soY2xpZW50LCBtZXNzYWdlLCB0cnVlKSkgcmV0dXJuO1xuICAgIGNsaWVudC5wbGF5ZXIuc2V0UmVwZWF0TW9kZShtZXNzYWdlLCBmYWxzZSk7XG4gICAgY2xpZW50LnBsYXllci5zdG9wKG1lc3NhZ2UpO1xuICAgIGNsaWVudC5wbGF5ZXIuZ2V0UXVldWUobWVzc2FnZSkuY29sbGVjdG9yLnN0b3AoKTtcbiAgICBjbGllbnQuY2xlYXJCYW5uZXIoY2xpZW50LCBtZXNzYWdlKTtcbiAgICBtZXNzYWdlLmNoYW5uZWwuYnVsa0RlbGV0ZSgxKS50aGVuKCgpID0+IHtcbiAgICAgICAgbWVzc2FnZS5jaGFubmVsXG4gICAgICAgICAgICAuc2VuZChgTXVzaWMgKipzdG9wcGVkKiogIWApXG4gICAgICAgICAgICAudGhlbigobXNnKSA9PiBtc2cuZGVsZXRlKHsgdGltZW91dDogMzAwMCB9KSk7XG4gICAgfSk7XG59O1xuXG5leHBvcnRzLmNvbmYgPSB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBndWlsZE9ubHk6IHRydWUsXG4gICAgYWxpYXNlczogWydzJ10sXG4gICAgcGVybUxldmVsOiAnTW9kZXJhdG9yJyxcbn07XG5cbmV4cG9ydHMuaGVscCA9IHtcbiAgICBuYW1lOiAnc3RvcCcsXG4gICAgY2F0ZWdvcnk6ICdNdXNpYycsXG4gICAgZGVzY3JpcHRpb246ICdTdG9wcyBtdXNpYycsXG4gICAgdXNhZ2U6ICdzdG9wJyxcbn07XG4iXX0=