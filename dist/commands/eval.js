// The EVAL command will execute **ANY** arbitrary javascript code given to it.
// THIS IS PERMISSION LEVEL 10 FOR A REASON! It's perm level 10 because eval
// can be used to do **anything** on your machine, from stealing information to
// purging the hard drive. DO NOT LET ANYONE ELSE USE THIS
// However it's, like, super ultra useful for troubleshooting and doing stuff
// you don't want to put in a command.
exports.run = async (client, message, args, level) => {
    // eslint-disable-line no-unused-vars
    const code = args.join(' ');
    try {
        const evaled = eval(code);
        const clean = await client.clean(client, evaled);
        message.channel.send(`\`\`\`js\n${clean}\n\`\`\``);
    }
    catch (err) {
        message.channel.send(`\`ERROR\` \`\`\`xl\n${await client.clean(client, err)}\n\`\`\``);
    }
};
exports.conf = {
    enabled: true,
    guildOnly: false,
    aliases: [],
    permLevel: 'Bot Owner',
};
exports.help = {
    name: 'eval',
    category: 'System',
    description: 'Evaluates arbitrary javascript.',
    usage: 'eval [...code]',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9ldmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtFQUErRTtBQUMvRSw0RUFBNEU7QUFDNUUsK0VBQStFO0FBQy9FLDBEQUEwRDtBQUUxRCw2RUFBNkU7QUFDN0Usc0NBQXNDO0FBQ3RDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO0lBQ2pELHFDQUFxQztJQUNyQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLElBQUk7UUFDQSxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsTUFBTSxLQUFLLEdBQUcsTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNqRCxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLEtBQUssVUFBVSxDQUFDLENBQUM7S0FDdEQ7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNWLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUNoQix1QkFBdUIsTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsVUFBVSxDQUNuRSxDQUFDO0tBQ0w7QUFDTCxDQUFDLENBQUM7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHO0lBQ1gsT0FBTyxFQUFFLElBQUk7SUFDYixTQUFTLEVBQUUsS0FBSztJQUNoQixPQUFPLEVBQUUsRUFBRTtJQUNYLFNBQVMsRUFBRSxXQUFXO0NBQ3pCLENBQUM7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHO0lBQ1gsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsUUFBUTtJQUNsQixXQUFXLEVBQUUsaUNBQWlDO0lBQzlDLEtBQUssRUFBRSxnQkFBZ0I7Q0FDMUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBFVkFMIGNvbW1hbmQgd2lsbCBleGVjdXRlICoqQU5ZKiogYXJiaXRyYXJ5IGphdmFzY3JpcHQgY29kZSBnaXZlbiB0byBpdC5cbi8vIFRISVMgSVMgUEVSTUlTU0lPTiBMRVZFTCAxMCBGT1IgQSBSRUFTT04hIEl0J3MgcGVybSBsZXZlbCAxMCBiZWNhdXNlIGV2YWxcbi8vIGNhbiBiZSB1c2VkIHRvIGRvICoqYW55dGhpbmcqKiBvbiB5b3VyIG1hY2hpbmUsIGZyb20gc3RlYWxpbmcgaW5mb3JtYXRpb24gdG9cbi8vIHB1cmdpbmcgdGhlIGhhcmQgZHJpdmUuIERPIE5PVCBMRVQgQU5ZT05FIEVMU0UgVVNFIFRISVNcblxuLy8gSG93ZXZlciBpdCdzLCBsaWtlLCBzdXBlciB1bHRyYSB1c2VmdWwgZm9yIHRyb3VibGVzaG9vdGluZyBhbmQgZG9pbmcgc3R1ZmZcbi8vIHlvdSBkb24ndCB3YW50IHRvIHB1dCBpbiBhIGNvbW1hbmQuXG5leHBvcnRzLnJ1biA9IGFzeW5jIChjbGllbnQsIG1lc3NhZ2UsIGFyZ3MsIGxldmVsKSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIGNvbnN0IGNvZGUgPSBhcmdzLmpvaW4oJyAnKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBldmFsZWQgPSBldmFsKGNvZGUpO1xuICAgICAgICBjb25zdCBjbGVhbiA9IGF3YWl0IGNsaWVudC5jbGVhbihjbGllbnQsIGV2YWxlZCk7XG4gICAgICAgIG1lc3NhZ2UuY2hhbm5lbC5zZW5kKGBcXGBcXGBcXGBqc1xcbiR7Y2xlYW59XFxuXFxgXFxgXFxgYCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIG1lc3NhZ2UuY2hhbm5lbC5zZW5kKFxuICAgICAgICAgICAgYFxcYEVSUk9SXFxgIFxcYFxcYFxcYHhsXFxuJHthd2FpdCBjbGllbnQuY2xlYW4oY2xpZW50LCBlcnIpfVxcblxcYFxcYFxcYGBcbiAgICAgICAgKTtcbiAgICB9XG59O1xuXG5leHBvcnRzLmNvbmYgPSB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBndWlsZE9ubHk6IGZhbHNlLFxuICAgIGFsaWFzZXM6IFtdLFxuICAgIHBlcm1MZXZlbDogJ0JvdCBPd25lcicsXG59O1xuXG5leHBvcnRzLmhlbHAgPSB7XG4gICAgbmFtZTogJ2V2YWwnLFxuICAgIGNhdGVnb3J5OiAnU3lzdGVtJyxcbiAgICBkZXNjcmlwdGlvbjogJ0V2YWx1YXRlcyBhcmJpdHJhcnkgamF2YXNjcmlwdC4nLFxuICAgIHVzYWdlOiAnZXZhbCBbLi4uY29kZV0nLFxufTtcbiJdfQ==